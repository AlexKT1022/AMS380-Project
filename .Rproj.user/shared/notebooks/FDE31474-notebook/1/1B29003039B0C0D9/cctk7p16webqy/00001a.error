{"frames":[{"func":"model %>% predict(test)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"predict(., test)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"predict.multinom(., test)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"model.frame(Terms, newdata, na.action = na.omit, xlev = object$xlevels)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"model.frame.default(Terms, newdata, na.action = na.omit, xlev = object$xlevels)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(sprintf(ngettext(length(m), \"factor %s has new level %s\", \n    \"factor %s has new levels %s\"), nm, paste(nxl[m], collapse = \", \")), \n    domain = NA)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in model.frame.default(Terms, newdata, na.action = na.omit, xlev = object$xlevels) : \n  factor PEU2 has new levels 1\n"}