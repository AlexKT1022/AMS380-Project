)
bird_collisions$family <- factor(
bird_collisions$family,
levels = c("Passerellidae", "Turdidae", "Certhiidae", "Troglodytidae", "Tyrannidae", "Parulidae"),
ordered = TRUE
)
unique(bird_collisions$family)
bird_collisions$date <- factor(
bird_collisions$date,
levels = c("autumn", "spring", "summer", "winter"),
ordered = TRUE
)
bird_collisions$locality <- factor(
bird_collisions$locality,
levels = c("MP", "CHI"),
ordered = TRUE
)
bird_collisions$family <- factor(
bird_collisions$family,
levels = c("Passerellidae", "Turdidae", "Certhiidae", "Troglodytidae", "Tyrannidae", "Parulidae"),
ordered = TRUE
)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
unique(bird_collisions$family)
bird_collisions$date <- factor(
bird_collisions$date,
levels = c("autumn", "spring", "summer", "winter"),
ordered = TRUE
)
bird_collisions$locality <- factor(
bird_collisions$locality,
levels = c("MP", "CHI"),
ordered = TRUE
)
bird_collisions$family <- factor(
bird_collisions$family,
levels = c("Passerellidae", "Turdidae", "Certhiidae", "Troglodytidae", "Tyrannidae", "Parulidae"),
ordered = TRUE
)
unique(bird_collisions$flight_call)
bird_collisions$date <- factor(
bird_collisions$date,
levels = c("autumn", "spring", "summer", "winter"),
ordered = TRUE
)
bird_collisions$locality <- factor(
bird_collisions$locality,
levels = c("MP", "CHI"),
ordered = TRUE
)
bird_collisions$family <- factor(
bird_collisions$family,
levels = c(
"Passerellidae",
"Turdidae",
"Certhiidae",
"Troglodytidae",
"Tyrannidae",
"Parulidae",
"Mimidae",
"Icteriidae",
"Icteridae",
"Cardinalidae",
"Polioptilidae",
"Regulidae",
"Sittidae",
"Vireonidae"
),
ordered = TRUE
)
unique(bird_collisions$habitat)
bird_collisions$date <- factor(
bird_collisions$date,
levels = c("autumn", "spring", "summer", "winter"),
ordered = TRUE
)
bird_collisions$locality <- factor(
bird_collisions$locality,
levels = c("MP", "CHI"),
ordered = TRUE
)
bird_collisions$family <- factor(
bird_collisions$family,
levels = c(
"Passerellidae",
"Turdidae",
"Certhiidae",
"Troglodytidae",
"Tyrannidae",
"Parulidae",
"Mimidae",
"Icteriidae",
"Icteridae",
"Cardinalidae",
"Polioptilidae",
"Regulidae",
"Sittidae",
"Vireonidae"
),
ordered = TRUE
)
bird_collisions$flight_call <- factor(
bird_collisions$flight_call,
levels = c("Yes", "No", "Rare"),
ordered = TRUE
)
unique(bird_collisions$stratum)
bird_collisions$date <- factor(
bird_collisions$date,
levels = c("autumn", "spring", "summer", "winter"),
ordered = TRUE
)
bird_collisions$locality <- factor(
bird_collisions$locality,
levels = c("MP", "CHI"),
ordered = TRUE
)
bird_collisions$family <- factor(
bird_collisions$family,
levels = c(
"Passerellidae",
"Turdidae",
"Certhiidae",
"Troglodytidae",
"Tyrannidae",
"Parulidae",
"Mimidae",
"Icteriidae",
"Icteridae",
"Cardinalidae",
"Polioptilidae",
"Regulidae",
"Sittidae",
"Vireonidae"
),
ordered = TRUE
)
bird_collisions$flight_call <- factor(
bird_collisions$flight_call,
levels = c("Yes", "No", "Rare"),
ordered = TRUE
)
bird_collisions$habitat <- factor(
bird_collisions$habitat,
levels = c("Open", "Forest", "Edge"),
ordered = TRUE
)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.80, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
#| output: false
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
bird_collisions$date <- factor(
bird_collisions$date,
levels = c("autumn", "spring", "summer", "winter"),
ordered = TRUE
)
bird_collisions$locality <- factor(
bird_collisions$locality,
levels = c("MP", "CHI"),
ordered = TRUE
)
bird_collisions$family <- factor(
bird_collisions$family,
levels = c(
"Passerellidae",
"Turdidae",
"Certhiidae",
"Troglodytidae",
"Tyrannidae",
"Parulidae",
"Mimidae",
"Icteriidae",
"Icteridae",
"Cardinalidae",
"Polioptilidae",
"Regulidae",
"Sittidae",
"Vireonidae"
),
ordered = TRUE
)
bird_collisions$flight_call <- factor(
bird_collisions$flight_call,
levels = c("Yes", "No", "Rare"),
ordered = TRUE
)
bird_collisions$habitat <- factor(
bird_collisions$habitat,
levels = c("Open", "Forest", "Edge"),
ordered = TRUE
)
bird_collisions$locality <- factor(
bird_collisions$locality,
levels = c("Lower", "Upper"),
ordered = TRUE
)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.8, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model_ordinal <- polr(family ~ ., data = bird_collisions, Hess = TRUE)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
bird_collisions$family <- ifelse(
bird_collisions$family == "Icteriidae",
"Icteridae",
bird_collisions$family
)
View(bird_collisions)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
bird_collisions$family <- ifelse(
bird_collisions$family == "Icteriidae",
"Icteridae",
bird_collisions$family
)
unique(bird_collisions$family)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
bird_collisions$family <- ifelse(
bird_collisions$family == "Icteriidae",
"Icteridae",
bird_collisions$family
)
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.80, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
#| output: false
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
bird_collisions$family <- ifelse(
bird_collisions$family == "Icteriidae",
"Icteridae",
bird_collisions$family
)
unique(bird_collisions$family)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species"))
# %>%
#   subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
bird_collisions$family <- ifelse(
bird_collisions$family == "Icteriidae",
"Icteridae",
bird_collisions$family
)
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.80, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
#| output: false
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
bird_collisions$family <- ifelse(
bird_collisions$family == "Icteriidae",
"Icteridae",
bird_collisions$family
)
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.80, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
#| output: false
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
View(bird_collisions)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(
as.Date(bird_collisions$date),
out.fmt = "seasons"
)
bird_collisions$family <- ifelse(
bird_collisions$family == "Icteriidae",
"Icteridae",
bird_collisions$family
)
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.80, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
#| output: false
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(
as.Date(bird_collisions$date),
out.fmt = "seasons"
)
bird_collisions$family <- ifelse(
bird_collisions$family == "Icteriidae",
"Icteridae",
bird_collisions$family
)
set.seed(123)
train_idx <- bird_collisions$family %>%
createDataPartition(p = 0.80, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
#| output: false
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(
as.Date(bird_collisions$date),
out.fmt = "seasons"
)
bird_collisions$family <- ifelse(
bird_collisions$family == "Icteriidae",
"Icteridae",
bird_collisions$family
)
set.seed(123)
train_idx <- bird_collisions$family %>%
createDataPartition(p = 0.80, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
#| output: false
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
summary(model)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(
as.Date(bird_collisions$date),
out.fmt = "seasons"
)
bird_collisions$family <- ifelse(
bird_collisions$family == "Icteriidae",
"Icteridae",
bird_collisions$family
)
set.seed(123)
train_idx <- bird_collisions$family %>%
createDataPartition(p = 0.80, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
#| output: false
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
coef(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
bird_collisions %>% count(species, sort = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(
as.Date(bird_collisions$date),
out.fmt = "seasons"
)
bird_collisions$family <- ifelse(
bird_collisions$family == "Icteriidae",
"Icteridae",
bird_collisions$family
)
set.seed(123)
train_idx <- bird_collisions$family %>%
createDataPartition(p = 0.80, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
#| output: false
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
coef(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
bird_collisions %>% count(species, sort = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(
as.Date(bird_collisions$date),
out.fmt = "seasons"
)
bird_collisions$family <- ifelse(
bird_collisions$family == "Icteriidae",
"Icteridae",
bird_collisions$family
)
set.seed(123)
train_idx <- bird_collisions$family %>%
createDataPartition(p = 0.80, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
#| output: false
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
coef(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
