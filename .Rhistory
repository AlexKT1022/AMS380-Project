subset(family != "Laniidae")
set.seed(123)
View(bird_collisions)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.8, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train)
# %>%
#   stepAIC(direction = "backward", trace = FALSE)
summary(model)
#| output: false
install.packages(c("caret", "MASS", "nnet", "tidyverse"))
library(caret)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species", "date")) %>%
subset(family != "Laniidae")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.8, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train)
# %>%
#   stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "MASS", "nnet", "tidyverse"))
library(caret)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species", "date")) %>%
subset(family != "Laniidae")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.8, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- as.Date(bird_collisions$date)
View(bird_collisions)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- as.Date(bird_collisions$date)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- as.Date(bird_collisions$date)
View(bird_collisions)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- as.Date(bird_collisions$date)
typeof(bird_collisions$date[1])
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- as.Date(bird_collisions$date)
bird_collisions$date[1]
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
View(bird_collisions)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.8, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.85, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.8, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.9, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.5, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.6, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.65, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.7, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.6, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.85, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.9, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.95, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.7, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.8, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.75, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.75, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
#| output: false
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
#| output: false
install.packages(c("caret", "hydroTSM", "MASS", "nnet", "tidyverse"))
library(caret)
library(hydroTSM)
library(MASS)
library(nnet)
library(tidyverse)
bird_collisions <- read.csv("data/bird_collisions.csv") %>%
select(-c("genus", "species")) %>%
subset(family != "Laniidae")
bird_collisions$date <- time2season(as.Date(bird_collisions$date), out.fmt = "seasons")
set.seed(123)
train_idx <- bird_collisions$family %>% createDataPartition(p = 0.8, list = FALSE)
train <- bird_collisions[train_idx, ]
test <- bird_collisions[-train_idx, ]
#| output: false
model <- nnet::multinom(family ~ ., data = train) %>%
stepAIC(direction = "backward", trace = FALSE)
summary(model)
pred_classes <- model %>% predict(test)
mean(pred_classes == test$family)
# train_idx <- iris$Species %>% createDataPartition(p = 0.8, list = FALSE)
# train <- iris[train_idx, ]
# test <- iris[-train_idx, ]
# model_ordinal <- polr(Species ~ ., data = iris, Hess = TRUE)
git remote add origin https://github.com/AlexKT1022/AMS380-Project.git
